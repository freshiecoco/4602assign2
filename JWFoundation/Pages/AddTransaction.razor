@page "/addtransaction"
@attribute [Authorize(Roles = "Admin")]
@inject TransactionService transactionService
@inject NavigationManager NavManager
@inject AuthenticationStateProvider AuthenticationStateProvider


<PageTitle>Add Transaction Type</PageTitle>
<div class="container">
<h1>New Transaction Type</h1>

<EditForm Model="@transaction" OnValidSubmit="HandleValidSubmit">
  <DataAnnotationsValidator />

  <div class="form-group py-2">
    <ValidationMessage For="@(() => transaction.Name)" />
    <label for="Name">Name:</label>
    <InputText id="Name" class="form-control" @bind-Value="transaction.Name" />
  </div>
  <div class="form-group py-2">
    <ValidationMessage For="@(() => transaction.Description)" />
    <label for="Description">Description:</label>
    <InputText id="Description" class="form-control" @bind-Value="transaction.Description" />
  </div>

  <button type="submit" class="btn btn-dark my-5">Submit</button>
</EditForm>
</div>
@code {
  private TransactionType transaction = new TransactionType();

  private async Task HandleValidSubmit() {
    var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
    var user = authenticationState.User;
    var username = user.Identity?.Name;

    transaction!.CreatedBy = username?.ToString() ?? "Unknown";
    transaction!.Created = DateTime.Now;
    await transactionService.InsertTransactionTypeAsync(transaction);
    NavManager.NavigateTo("/transactions");
  }
}