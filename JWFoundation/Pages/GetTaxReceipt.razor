@page "/receipt/{accountNo:int}/{year:int}"
@attribute [Authorize(Roles = "Admin")]
@inject DonationService donationService
@inject DonorService donorService

@if (donor != null && totalDonationAmount > 0){
<div class="container" style="max-width: 1000px;">
   <h1>RECEIPT</h1>
   <div class="row">
        <div class="col-md-6">
            <div>
                <h3>JW Foundation</h3>
                <p>98 Acorn Ave</p>
                <p>Coquitlam, V4T1L5, Canada</p>
            </div>
        </div>
        <div class="col-md-6 text-end">
            <img src="images/logo.png" alt="logo" style="max-width: 200px;">
        </div>
    </div>

    <h4 class="mt-4">Donation receipt for @donor.FirstName @donor.LastName</h4>
    <p>@DateTime.Now.ToString("MMMM dd, yyyy")</p>

    <div class="mt-4 bg-light p-2">
        <p class=text-center>Donor Information</p>
        <p><strong>Name:</strong>@donor.FirstName @donor.LastName</p>
        <p><strong>Address:</strong>@donor.Street, @donor.City @donor.PostalCode @donor.Country</p>
        <p><strong>Email:</strong>@donor.Email</p>
    </div>
    <div class="mt-4 bg-light p-2">
        <p class=text-center>Donation Information</p>
        <p>Thank you for your donation with the value of <strong> $@totalDonationAmount</strong>, 
        made to our charity organization in the year</p>
    </div>

    <div class="text-center my-5 text-muted">Thank you for your kindness and continued support!</div>

    <div class="mt-5">
        <h3 style="border-top: 1px solid #000;">JW Foundation Manager</h3>
        <p>Jeffrey Wang</p>
    </div>
</div>
}
else
{
    <div class="container text-center" style="margin-top: 50px;">
        <h3>No receipt found for this account number and year.</h3>
    </div>
}


@code {
    private Donor? donor = new Donor();
    private float totalDonationAmount = 0;

    [Parameter]
    public int AccountNo { get; set; }
    [Parameter]
    public int Year { get; set; }

    protected override async Task OnInitializedAsync()
    {
        donor = await donorService.GetDonorByIdAsync(AccountNo);
        var donations = await donationService.FindDonationsByAccountNoAndYearAsync(AccountNo, Year);
        totalDonationAmount = donations.Sum(donation => (float)donation.Amount);
    }
}